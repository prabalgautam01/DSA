 vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>res;
        int n=nums.size();
        if(nums.empty()) return res;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
               long target_2=target-(long)(nums[j]+nums[i]);
                int left=j+1;
                int right=n-1;
                while(left<right){
                    int two_sum=nums[left]+nums[right];
                    if(two_sum<target_2) left++;
                    else if(two_sum>target_2) right--;
                    else
                    {
                        vector<int>quadrauplet(4,0);
                        quadrauplet[0]=nums[i];
                        quadrauplet[1]=nums[j];
                        quadrauplet[2]=nums[left];
                        quadrauplet[3]=nums[right];
                        res.push_back(quadrauplet);
                        while(left<right && nums[left]== quadrauplet[2]) ++left;
                        while(left<right && nums[right]== quadrauplet[3]) --right;
                        
                    }
                }
                while(j+1<n && nums[j+1]==nums[j]) ++j;
                
            }
             while(i+1<n && nums[i+1]==nums[i]) ++i;
        }
        return res;
            
    }
